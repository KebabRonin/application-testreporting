<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>QA</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Main.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1369325126000</creationDate>
  <date>1369845237000</date>
  <contentUpdateDate>1369845237000</contentUpdateDate>
  <version>1.1</version>
  <title>QA</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>QA.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>cc2ce171-e73a-4fab-a525-823f1ac8835d</guid>
    <property>
      <cache>short</cache>
    </property>
    <property>
      <code>document.observe('xwiki:livetable:newrow', function(event){
  event.memo.row.down('.actionrunTest').observe('click', function(event) {
    event.stop();
    var runTestLink = [event.element()];

    var loading = new Element('div', {'class' : 'loading'});
    var dialog = new XWiki.widgets.ModalPopup(
      loading, {}, {
        'verticalPosition' : 'top',
        'title' : "Run Test",
        'removeOnClose' : true,
        'extraClassName' : 'runTest'
      }
    );
    dialog.showDialog();

    var loadNextTest = function(runTestLink){
      var cell = runTestLink.up('td');
      var row = cell.up();
      var table = row.up('table');
      if (row.rowIndex + 1 &lt; table.rows.length){
        var nextLink = table.rows[row.rowIndex + 1].cells[cell.cellIndex].down('a.actionrunTest');
        loadTest(nextLink);
        return nextLink;
      }else{
        return null;
      }
    }

    var onSubmit = function(event){
      event.stop();
      var button = event.element();
      var form = button.form;
      new Ajax.Request(form.action, {
         parameters : form.serialize(),
         onCreate: function(){
           form.disable();
         },
         onSuccess: function(){
           runTestLink[0] = button.name == 'addObjectAndNext' &amp;&amp; loadNextTest(runTestLink[0]);
           if (!runTestLink[0]){
             dialog.closeDialog();
             // Reload LiveTable
             var end = qaHomePageLiveTable.limit;
             var start = Math.max(qaHomePageLiveTable.lastOffset, 1);
             qaHomePageLiveTable.clearCache();
             qaHomePageLiveTable.getRows(start, end, start, end);
           }
           new XWiki.widgets.Notification("Test execution added", 'done');
         },
         on0 : function (response) {
           response.request.options.onFailure(response);
         },
         onFailure: function(response){
           form.enable();
           new XWiki.widgets.Notification("Failed to add test execution " + response.statusText, 'error');
         }
      })
    }

    var addNextButton = function(runTestButton){
      var next = new Element('input', { 'class': 'secondary button', 'value': 'Run and Next','name': 'addObjectAndNext', 'type': 'submit'});
      var span = new Element('span', {'class': 'buttonwrapper'});
      span.insert(next);
      runTestButton.up().insert({after: span});
      next.observe('click', onSubmit);
    }

    var loadTest = function(runTestLink){
      var url = runTestLink.readAttribute('href');
      var dialogContent = dialog.dialog.down('.xdialog-content')
      new Ajax.Updater(dialogContent, url, {
        parameters: {
          xpage:'plain'
        },
        onComplete: function(){
          document.fire('xwiki:dom:updated', {elements: [dialogContent]});
          var submit = dialogContent.down('input[name=addObject]');
          submit &amp;&amp; submit.observe('click', onSubmit);
          addNextButton(submit);
        }
      });  
    }

    loadTest(runTestLink[0]); 
  });
});</code>
    </property>
    <property>
      <name>code</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>QA.WebHome</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>7d680acd-91f0-41f4-bf3c-6c47b8ab2db2</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>td a.action{
  background-image: url("/xwiki/resources/icons/silk/control_play.png");
}

.runTest.xdialog-box{
  width:500px;
}

.browserVersions{
  font-size:10px;
}

.databaseVersions{
  font-size:10px;
}</code>
    </property>
    <property>
      <name>style</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <content>{{velocity}}
#set($discard = $xwiki.ssx.use("QA.WebHome"))
#set($discard = $xwiki.jsx.use("QA.WebHome" ,{'minify':false,'defer':false}))
#set($columns = ['doc.title', 'doc.space', 'userType', 'product', 'browsers', 'databases', 'automated'])
#set($columnsProperties = {
  'doc.title'      :{'type': 'text', 'link': 'view', 'size': 10, 'filterable': true, 'sortable': true},
  'doc.space'     :{'type': 'text', 'link': 'space', 'size': 10, 'filterable': true, 'sortable': true},
  'userType'      :{'type': 'list', 'class': 'QA.TestClass'},
  'product'       :{'type': 'text', 'html' :true, 'filterable': false, 'sortable': false},
  'browsers'      :{'type': 'text', 'html': true, 'filterable': false, 'sortable': false},
  'databases'     :{'type': 'text', 'html': true, 'filterable': false, 'sortable': false},
  'automated'     :{'type': 'list', 'class': 'QA.TestClass'}
})
#set($options = {
  'resultPage' : 'QA.LiveTableResults',
  'tagCloud': true,
  "translationPrefix" : "qaapp.WebHome.LiveTable.",
  'rowCount': 15,
  'maxPages': 10,
  'selectedColumn': 'doc.title',
  'defaultOrder': 'asc',
  'javascriptName' : 'qaHomePageLiveTable'
})
#if(!$isGuest)
  #set($discard = $columns.add('_actions'))
  #set($discard = $columnsProperties.put('_actions', { 'actions' : ['runTest'] }))
#end
(%class="buttonwrapper"%)[[$services.localization.render('qaapp.WebHome.addTest.button')&gt;&gt;QA.AddTest]] [[$services.localization.render('qaapp.WebHome.hallOfFame.button')&gt;&gt;QA.HallOfFame]] [[$services.localization.render('qaapp.WebHome.management.button')&gt;&gt;QA.Management]]#livetable('qa' $columns $columnsProperties $options)
{{/velocity}}</content>
</xwikidoc>
